{"remainingRequest":"E:\\K\\code\\git\\VolunteerServiceManagementSystem\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\K\\code\\git\\VolunteerServiceManagementSystem\\front\\src\\views\\modules\\huodong\\list.vue?vue&type=template&id=eb7ff2ae&scoped=true","dependencies":[{"path":"E:\\K\\code\\git\\VolunteerServiceManagementSystem\\front\\src\\views\\modules\\huodong\\list.vue","mtime":1731741316081},{"path":"E:\\K\\code\\git\\VolunteerServiceManagementSystem\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\K\\code\\git\\VolunteerServiceManagementSystem\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\K\\code\\git\\VolunteerServiceManagementSystem\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\K\\code\\git\\VolunteerServiceManagementSystem\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\K\\code\\git\\VolunteerServiceManagementSystem\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\K\\code\\git\\VolunteerServiceManagementSystem\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}